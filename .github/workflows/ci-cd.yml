name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  PRISMA_VERSION: '4.16.2'
  SSH_PORT: '22'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Cache pnpm modules
      uses: actions/cache@v3
      id: cache-pnpm
      with:
        path: |
          ~/.pnpm-store
          node_modules
          .next/cache
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Set up Prisma
      run: |
        npx @prisma/client@${{ env.PRISMA_VERSION }}
        npx prisma generate

    - name: Run linting
      run: pnpm lint

    - name: Run type checking
      run: pnpm type-check

    - name: Run tests
      run: pnpm test

    - name: Build application
      run: pnpm build

    - name: Upload build artifacts
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: .next/

  deploy:
    name: Deploy to Production Server
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build project
      run: pnpm build
      
    - name: Deploy to Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ env.SSH_PORT }}
        script: |
          cd /www/wwwroot/hw.abu.ink
          git fetch origin main
          git reset --hard origin/main
          pnpm install --frozen-lockfile --prod
          pnpm build
          pm2 delete haowang-ai || true
          pm2 start pnpm --name "haowang-ai" -- start
          pm2 save
          pm2 startup || true
